{"version":3,"sources":["component/Button.js","component/Form.js","component/Add.js","component/Element.js","component/List.js","App.js","serviceWorker.js","index.js"],"names":["Button","className","type","onClick","this","props","adding","Component","Form","state","title","project","minutes","ajouter","creer","ajour","cancel","form","time","componentWillMount","setState","cORu","htmlFor","value","onChange","e","target","id","aria-describedby","Add","val","valeur","Element","button","handleClick","console","log","demarrer","titre","bg","Math","floor","href","delete","edit","List","listes","liste","map","el","key","pause","forms","length","App","ids","handleSubmit","element","uuid","boo","a","setInterval","push","forEach","clearInterval","filter","i","preventDefault","lis","pop","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.414d9507.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Button extends Component {\n    render() {\n        return (\n            <div className='my-3'>\n                <button type=\"button\" onClick={this.props.adding} className=\"btn btn-success btn-block \">+</button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\n\nclass Form extends Component {\n    state={\n        title : '',\n        project : '',\n        minutes: null\n    }\n  \n    ajouter=()=>{\n        if(this.props.adding){\n            this.props.creer(this.state.title, this.state.project)\n            this.props.adding()\n        }else{\n            this.props.ajour(this.state.title, this.state.project, this.state.minutes)\n            \n        }\n        \n    }\n\n    cancel= () =>{\n        if(this.props.form){\n            this.props.ajour(this.props.form.title, this.props.form.project, this.props.form.time)\n        }\n        \n    }\n\n    componentWillMount=()=>{\n        !this.props.adding &&\n            this.setState({\n                title: this.props.form.title,\n                project : this.props.form.project,\n                minutes: this.props.form.time\n            })\n            \n            \n        \n    }\n\n    render() {\n       \n        const cORu=(this.props.adding) ? \"Create\" : \"Update\"\n      \n        \n        return (\n            <div className='border border-secondary p-2 rounded'>\n                <form>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleInputEmail1\">Title</label>\n                        <input type=\"text\" value={this.state.title} onChange={e =>{this.setState({title: e.target.value})}} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleInputPassword1\">Project</label>\n                        <input type=\"text\" value={this.state.project} onChange={e =>{this.setState({project: e.target.value})}} className=\"form-control\" id=\"exampleInputPassword1\" />\n                    </div>\n                    <div className=\"row\">\n                    <div className=\"col\"><button type=\"button\" onClick={() => this.ajouter()} className=\"btn btn-primary btn-block \">{cORu}</button></div>\n                    <div className=\"col\"><button type=\"button\" onClick={() => this.cancel()} className=\"btn btn-danger btn-block \">Cancel</button></div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\nexport default Form\n","import React, { Component } from 'react'\nimport Button from './Button'\nimport Form from './Form'\n\nclass Add extends Component {\n   state={\n       val: true\n   }\n    adding = () =>{  \n        this.setState({\n            val: !this.state.val\n        })\n    }\n\n    render() {\n        const valeur= this.state.val ? <Button adding={this.adding} /> :<Form adding={this.adding} creer={this.props.creer} />\n        return (\n            <div>\n                {valeur}\n            </div>\n        )\n    }\n}\nexport default Add\n","import React, { Component } from 'react'\n\nclass Element extends Component {\n    state={\n    button: true\n    }\n    \n    handleClick= () =>{\n        this.setState({\n            button: !this.state.button\n        })\n            console.log('start', this.state.button)\n            this.props.demarrer(this.props.id, this.state.button) \n    }\n\n    render() {\n        const button= this.state.button ? {titre:\"start\", bg: \"primary\"}:{titre:\"stop\", bg: \"info\"};\n        \n        return (\n            <div className=\"border border-info rounded my-3\">\n                <h3>{this.props.title}</h3>\n                <h5>{this.props.project}</h5>\n                <div className=\"text-center\">\n                    <h1>\n                        <br/>\n                        <span className=\"\">{Math.floor(this.props.time/86400)%30}</span>:\n                        <span className=\"heure\">{Math.floor(this.props.time/3600)%24}</span>:\n                        <span className=\"minute\">{Math.floor(this.props.time/60)%60}</span>:\n        <span className=\"seconde\">{this.props.time % 60}</span>\n                    </h1>\n                </div>\n                <div className=\"text-right\">\n                    <a href=\"/\" className='d-inline-block mx-2' onClick={e => this.props.delete(this.props.id, e)}><i className=\"fa fa-times-circle fa-2x\"></i></a>\n                    <a href=\"/\" className='d-inline-block mx-2' onClick={e => this.props.edit(this.props.id, e)}><i className=\"fa fa-edit fa-2x\"></i></a>\n                </div>\n        <div className=\"col-8 offset-2 my-3\"><button type=\"button\" onClick={this.handleClick} className= {`btn btn-${button.bg} btn-block`} >{button.titre}</button></div>\n                \n            </div>\n        )\n    }\n}\nexport default Element\n","import React, { Component } from 'react'\nimport Element from './Element'\nimport Form from './Form'\n\nclass List extends Component {\n   \n   \n    render() {\n      const listes= this.props.liste.map(el => <Element key={el.id} id={el.id} title={el.title} project={el.project} time={ el.time} demarrer={this.props.demarrer} pause={this.props.pause} delete={this.props.delete} edit={this.props.edit} />)\n      const forms= (this.props.form.length >0) && this.props.form.map(el => <Form key={el.id} adding={ false} form={el} ajour={this.props.ajour} />)\n        return (\n            <div>\n                {listes}\n                {forms}\n            </div>\n        )\n    }\n}\nexport default List\n","import React, { Component } from 'react';\nimport uuid from 'react-uuid'\nimport Add from './component/Add';\nimport List from './component/List';\n\nimport './App.css';\n\nclass App extends Component {\nids=[];\nforms=[]\nstate={\n listes :[],\n form :[]\n}\n\n  handleSubmit= (title ,project) =>{\n    const element = {\n      title ,\n      project,\n      id : uuid(),\n      time : 0\n    }\n    this.setState({\n      listes : [...this.state.listes, element]\n    })\n  };\n \n  demarrer= (id, boo) => {\n    \n    if(boo){\n      \n     this.a= setInterval(() => {\n        this.setState({\n          listes: this.state.listes.map(el =>{\n            if(el.id===id){\n              el.time ++;\n              return el\n            }else{\n              return el\n            }\n          })\n        })\n      }, 1000)\n     this.ids.push({a:this.a, id: id}) \n      \n    }else{\n        this.ids.forEach(el =>{\n          if(el.id===id){\n            clearInterval(el.a)\n            this.ids= this.ids.filter(i => i !== el)\n          }\n        }) \n    }      \n  }\n\n  delete= (id, e) => {\n    e.preventDefault()\n    \n    for(let i=0; i< this.ids.length; i++){\n      if(id==this.ids[i].id){\n        this.ids= this.ids.filter(i => i.id !== id)\n      }\n    }\n   \n    let lis= this.state.listes.filter(el => {\n      if(el.id!=id){\n        return el;\n      }\n    })\n    this.setState({\n      listes:lis\n    })\n  }\n\nedit=(id, e) =>{\ne.preventDefault()\nlet lis= this.state.listes.filter(el => {\n  if(el.id==id){\n    return el;\n  }\n})\nthis.forms.push(lis[0])\nthis.setState({\n  form: this.forms\n})\n\nlet liste= this.state.listes.filter(el => {\n  if(el.id!=id){\n    return el;\n  }\n})\nthis.setState({\n  listes:liste\n})\n\n}\n\n\najour=(title, project, time)=>{\n  const element = {\n    title ,\n    project,\n    id : uuid(),\n    time \n  }\n  this.forms.pop()\n  this.setState({\n    listes : [...this.state.listes, element],\n    form: this.forms\n  })\n}\n\n\n\n  render(){\n\n    return (\n      <div className=\"container\">\n        <div className=\"App\">\n          <h3>Timers</h3>\n          <List liste={this.state.listes} demarrer={this.demarrer} pause={this.pause} delete={this.delete} edit={this.edit} form={this.state.form} ajour={this.ajour} />\n          <Add creer={this.handleSubmit} />\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}